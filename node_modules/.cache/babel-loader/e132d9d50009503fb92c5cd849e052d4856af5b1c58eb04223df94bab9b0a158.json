{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { listTodos } from '../graphql/queries';\nimport { generateClient } from 'aws-amplify/api';\nimport { createTodoTypeTable, deleteTodoTypeTable, updateTodoTypeTable } from '../graphql/mutations';\nexport default {\n  setup() {\n    const todos = ref([]);\n    const newTodo = ref('');\n\n    // Fetch existing todos\n    const fetchTodos = async () => {\n      try {\n        const client = generateClient();\n        const todoData = await client.graphql({\n          query: listTodos\n        });\n        todos.value = todoData.data.listTodoTypeTables.items;\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n\n    // Add new todo\n    const addTodoItem = async () => {\n      if (!newTodo.value.trim()) return; // Ensure description is not empty\n      try {\n        const client = generateClient();\n        const todo = {\n          id: Math.random().toString(36).substr(2, 9),\n          // Set your ID here or use UUID\n          description: newTodo.value,\n          completed: false,\n          created_at: new Date().toISOString() // Example of created_at as current timestamp\n        };\n        await client.graphql({\n          query: createTodoTypeTable,\n          variables: {\n            createtodotypetableinput: todo\n          }\n        }).then(() => {\n          fetchTodos();\n          newTodo.value = '';\n        }).catch(err => console.log(\"Error is:\", err));\n      } catch (error) {\n        console.error('Error adding todo:', error);\n      }\n    };\n\n    // Delete todo item\n    const deleteTodoItem = async (id, created_at) => {\n      try {\n        const client = generateClient();\n        await client.graphql({\n          query: deleteTodoTypeTable,\n          variables: {\n            deleteTodoTypeTableInput: {\n              id,\n              created_at\n            }\n          }\n        });\n\n        // Refresh the list after deletion\n        fetchTodos();\n      } catch (error) {\n        console.error('Error deleting todo:', error);\n      }\n    };\n\n    // Update todo item (change completed status)\n    const updateTodoItem = async todo => {\n      try {\n        const client = generateClient();\n        await client.graphql({\n          query: updateTodoTypeTable,\n          variables: {\n            id: todo.id,\n            completed: todo.completed,\n            created_at: todo.created_at\n          }\n        });\n        // Optional: refetch or update UI optimistically\n        console.log('Todo updated:', todo);\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    };\n    onMounted(() => {\n      fetchTodos();\n    });\n    return {\n      todos,\n      newTodo,\n      addTodoItem,\n      deleteTodoItem,\n      updateTodoItem\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","listTodos","generateClient","createTodoTypeTable","deleteTodoTypeTable","updateTodoTypeTable","setup","todos","newTodo","fetchTodos","client","todoData","graphql","query","value","data","listTodoTypeTables","items","error","console","addTodoItem","trim","todo","id","Math","random","toString","substr","description","completed","created_at","Date","toISOString","variables","createtodotypetableinput","then","catch","err","log","deleteTodoItem","deleteTodoTypeTableInput","updateTodoItem"],"sources":["/var/www/todo-app/src/components/TodoList.vue"],"sourcesContent":["<template>\n  <div class=\"todo-container\">\n    <h1 class=\"title\">Todo List</h1>\n    <div class=\"input-container\">\n      <input v-model=\"newTodo\" @keyup.enter=\"addTodoItem\" placeholder=\"Add a todo\" class=\"todo-input\">\n    </div>\n    <ul class=\"todo-list\">\n      <li v-for=\"todo in todos\" :key=\"todo.id\" class=\"todo-item\">\n        <div class=\"todo-content\">\n          <input \n            type=\"checkbox\" \n            v-model=\"todo.completed\" \n            @change=\"updateTodoItem(todo)\" \n            class=\"todo-checkbox\"\n          >\n          <span :class=\"{ completed: todo.completed }\">{{ todo.description }}</span>\n        </div>\n        <button @click=\"deleteTodoItem(todo.id,todo.created_at)\" class=\"delete-button\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { listTodos } from '../graphql/queries';\nimport { generateClient } from 'aws-amplify/api';\nimport { createTodoTypeTable, deleteTodoTypeTable, updateTodoTypeTable } from '../graphql/mutations';\n\nexport default {\n  setup() {\n    const todos = ref([]);\n    const newTodo = ref('');\n\n    // Fetch existing todos\n    const fetchTodos = async () => {\n      try {\n        const client = generateClient();\n        const todoData = await client.graphql({query: listTodos});\n        todos.value = todoData.data.listTodoTypeTables.items;\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n\n    // Add new todo\n    const addTodoItem = async () => {\n      if (!newTodo.value.trim()) return;  // Ensure description is not empty\n      try {\n        const client = generateClient();\n        const todo = {\n          id: Math.random().toString(36).substr(2, 9),  // Set your ID here or use UUID\n          description: newTodo.value,\n          completed: false,\n          created_at: new Date().toISOString() // Example of created_at as current timestamp\n        };\n\n        await client.graphql({\n          query: createTodoTypeTable,  \n          variables: {\n            createtodotypetableinput: todo  \n          }\n        })\n        .then(() => {\n          fetchTodos();\n          newTodo.value = '';\n        })\n        .catch(err => console.log(\"Error is:\", err));\n\n      } catch (error) {\n        console.error('Error adding todo:', error);\n      }\n    };\n\n    // Delete todo item\n       const deleteTodoItem = async (id,created_at) => {\n      try {\n        const client = generateClient();\n        await client.graphql({\n          query: deleteTodoTypeTable,\n          variables: {deleteTodoTypeTableInput:{ id,created_at }}\n        });\n\n        // Refresh the list after deletion\n        fetchTodos();\n      } catch (error) {\n        console.error('Error deleting todo:', error);\n      }\n    };\n\n    // Update todo item (change completed status)\n    const updateTodoItem = async (todo) => {\n      try {\n        const client = generateClient();\n        await client.graphql({\n          query: updateTodoTypeTable,\n          variables: {\n            id: todo.id,\n            completed: todo.completed,\n            created_at:todo.created_at\n          }\n        });\n        // Optional: refetch or update UI optimistically\n        console.log('Todo updated:', todo);\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    };\n\n    onMounted(() => {\n      fetchTodos();\n    });\n\n    return {\n      todos,\n      newTodo,\n      addTodoItem,\n      deleteTodoItem,\n      updateTodoItem\n    };\n  }\n};\n</script>\n\n<style scoped>\n.todo-container {\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.title {\n  text-align: center;\n  font-size: 2rem;\n  margin-bottom: 20px;\n  color: #353939;\n}\n\n.input-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.todo-input {\n  width: 100%;\n  max-width: 500px;\n  padding: 10px 15px;\n  font-size: 1rem;\n  border: 1px solid #DAD7D7;\n  border-radius: 6px;\n  outline: none;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n  transition: border-color 0.3s ease;\n}\n\n.todo-input:focus {\n  border-color: #353939;\n}\n\n.todo-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.todo-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #EFF3EF;\n  padding: 15px;\n  border-radius: 6px;\n  margin-bottom: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.todo-content {\n  display: flex;\n  align-items: center;\n}\n\n.todo-checkbox {\n  margin-right: 10px;\n}\n\n.completed {\n  text-decoration: line-through;\n  color: #a9a9a9;\n}\n\n.delete-button {\n  background-color: #ff5c5c;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.delete-button:hover {\n  background-color: #ff3030;\n}\n\n@media (max-width: 600px) {\n  .todo-input {\n    width: 90%;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}