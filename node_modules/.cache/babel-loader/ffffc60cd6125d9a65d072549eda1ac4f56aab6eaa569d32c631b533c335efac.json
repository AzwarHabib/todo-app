{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-container\"\n};\nconst _hoisted_2 = {\n  class: \"input-container\"\n};\nconst _hoisted_3 = {\n  class: \"todo-list\"\n};\nconst _hoisted_4 = {\n  class: \"todo-content\"\n};\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", {\n    class: \"title\"\n  }, \"Todo List\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTodo = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.addTodoItem && $setup.addTodoItem(...args), [\"enter\"])),\n    placeholder: \"Add a todo\",\n    class: \"todo-input\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.newTodo]])]), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.todos, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.id,\n      class: \"todo-item\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => todo.completed = $event,\n      onChange: $event => $setup.updateTodoItem(todo),\n      class: \"todo-checkbox\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), [[_vModelCheckbox, todo.completed]]), _createElementVNode(\"span\", {\n      class: _normalizeClass({\n        completed: todo.completed\n      })\n    }, _toDisplayString(todo.description), 3 /* TEXT, CLASS */)]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteTodoItem(todo.id, todo.created_at),\n      class: \"delete-button\"\n    }, \"Delete\", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","$event","$setup","newTodo","onKeyup","_withKeys","args","addTodoItem","placeholder","_hoisted_3","_Fragment","_renderList","todos","todo","key","id","_hoisted_4","type","completed","onChange","updateTodoItem","_hoisted_5","_normalizeClass","description","onClick","deleteTodoItem","created_at","_hoisted_6"],"sources":["/var/www/todo-app/src/components/TodoList.vue"],"sourcesContent":["<template>\n  <div class=\"todo-container\">\n    <h1 class=\"title\">Todo List</h1>\n    <div class=\"input-container\">\n      <input v-model=\"newTodo\" @keyup.enter=\"addTodoItem\" placeholder=\"Add a todo\" class=\"todo-input\">\n    </div>\n    <ul class=\"todo-list\">\n      <li v-for=\"todo in todos\" :key=\"todo.id\" class=\"todo-item\">\n        <div class=\"todo-content\">\n          <input \n            type=\"checkbox\" \n            v-model=\"todo.completed\" \n            @change=\"updateTodoItem(todo)\" \n            class=\"todo-checkbox\"\n          >\n          <span :class=\"{ completed: todo.completed }\">{{ todo.description }}</span>\n        </div>\n        <button @click=\"deleteTodoItem(todo.id,todo.created_at)\" class=\"delete-button\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { listTodos } from '../graphql/queries';\nimport { generateClient } from 'aws-amplify/api';\nimport { createTodoTypeTable, deleteTodoTypeTable, updateTodoTypeTable } from '../graphql/mutations';\n\nexport default {\n  setup() {\n    const todos = ref([]);\n    const newTodo = ref('');\n\n    // Fetch existing todos\n    const fetchTodos = async () => {\n      try {\n        const client = generateClient();\n        const todoData = await client.graphql({query: listTodos});\n        todos.value = todoData.data.listTodoTypeTables.items;\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n\n    // Add new todo\n    const addTodoItem = async () => {\n      if (!newTodo.value.trim()) return;  // Ensure description is not empty\n      try {\n        const client = generateClient();\n        const todo = {\n          id: Math.random().toString(36).substr(2, 9),  // Set your ID here or use UUID\n          description: newTodo.value,\n          completed: false,\n          created_at: new Date().toISOString() // Example of created_at as current timestamp\n        };\n\n        await client.graphql({\n          query: createTodoTypeTable,  \n          variables: {\n            createtodotypetableinput: todo  \n          }\n        })\n        .then(() => {\n          fetchTodos();\n          newTodo.value = '';\n        })\n        .catch(err => console.log(\"Error is:\", err));\n\n      } catch (error) {\n        console.error('Error adding todo:', error);\n      }\n    };\n\n    // Delete todo item\n       const deleteTodoItem = async (id,created_at) => {\n      try {\n        const client = generateClient();\n        await client.graphql({\n          query: deleteTodoTypeTable,\n          variables: {deleteTodoTypeTableInput:{ id,created_at }}\n        });\n\n        // Refresh the list after deletion\n        fetchTodos();\n      } catch (error) {\n        console.error('Error deleting todo:', error);\n      }\n    };\n\n    // Update todo item (change completed status)\n    const updateTodoItem = async (todo) => {\n      try {\n        const client = generateClient();\n        await client.graphql({\n          query: updateTodoTypeTable,\n          variables: {\n            id: todo.id,\n            completed: todo.completed,\n            created_at:todo.created_at\n          }\n        });\n        // Optional: refetch or update UI optimistically\n        console.log('Todo updated:', todo);\n      } catch (error) {\n        console.error('Error updating todo:', error);\n      }\n    };\n\n    onMounted(() => {\n      fetchTodos();\n    });\n\n    return {\n      todos,\n      newTodo,\n      addTodoItem,\n      deleteTodoItem,\n      updateTodoItem\n    };\n  }\n};\n</script>\n\n<style scoped>\n.todo-container {\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.title {\n  text-align: center;\n  font-size: 2rem;\n  margin-bottom: 20px;\n  color: #353939;\n}\n\n.input-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.todo-input {\n  width: 100%;\n  max-width: 500px;\n  padding: 10px 15px;\n  font-size: 1rem;\n  border: 1px solid #DAD7D7;\n  border-radius: 6px;\n  outline: none;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n  transition: border-color 0.3s ease;\n}\n\n.todo-input:focus {\n  border-color: #353939;\n}\n\n.todo-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.todo-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #EFF3EF;\n  padding: 15px;\n  border-radius: 6px;\n  margin-bottom: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.todo-content {\n  display: flex;\n  align-items: center;\n}\n\n.todo-checkbox {\n  margin-right: 10px;\n}\n\n.completed {\n  text-decoration: line-through;\n  color: #a9a9a9;\n}\n\n.delete-button {\n  background-color: #ff5c5c;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.delete-button:hover {\n  background-color: #ff3030;\n}\n\n@media (max-width: 600px) {\n  .todo-input {\n    width: 90%;\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAiB;;EAGxBA,KAAK,EAAC;AAAW;;EAEZA,KAAK,EAAC;AAAc;mBARjC;mBAAA;;uBACEC,mBAAA,CAmBM,OAnBNC,UAmBM,G,0BAlBJC,mBAAA,CAAgC;IAA5BH,KAAK,EAAC;EAAO,GAAC,WAAS,sBAC3BG,mBAAA,CAEM,OAFNC,UAEM,G,gBADJD,mBAAA,CAAgG;IAJtG,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIsBC,MAAA,CAAAC,OAAO,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAJrCK,SAAA,KAAAC,IAAA,KAI6CJ,MAAA,CAAAK,WAAA,IAAAL,MAAA,CAAAK,WAAA,IAAAD,IAAA,CAAW;IAAEE,WAAW,EAAC,YAAY;IAACb,KAAK,EAAC;iEAAnEO,MAAA,CAAAC,OAAO,E,KAEzBL,mBAAA,CAaK,MAbLW,UAaK,I,kBAZHb,mBAAA,CAWKc,SAAA,QAlBXC,WAAA,CAOyBT,MAAA,CAAAU,KAAK,EAAbC,IAAI;yBAAfjB,mBAAA,CAWK;MAXsBkB,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEpB,KAAK,EAAC;QAC7CG,mBAAA,CAQM,OARNkB,UAQM,G,gBAPJlB,mBAAA,CAKC;MAJCmB,IAAI,EAAC,UAAU;MAV3B,uBAAAhB,MAAA,IAWqBY,IAAI,CAACK,SAAS,GAAAjB,MAAA;MACtBkB,QAAM,EAAAlB,MAAA,IAAEC,MAAA,CAAAkB,cAAc,CAACP,IAAI;MAC5BlB,KAAK,EAAC;6CAblB0B,UAAA,I,kBAWqBR,IAAI,CAACK,SAAS,E,GAIzBpB,mBAAA,CAA0E;MAAnEH,KAAK,EAftB2B,eAAA;QAAAJ,SAAA,EAeqCL,IAAI,CAACK;MAAS;wBAAOL,IAAI,CAACU,WAAW,wB,GAElEzB,mBAAA,CAA8F;MAArF0B,OAAK,EAAAvB,MAAA,IAAEC,MAAA,CAAAuB,cAAc,CAACZ,IAAI,CAACE,EAAE,EAACF,IAAI,CAACa,UAAU;MAAG/B,KAAK,EAAC;OAAgB,QAAM,iBAjB7FgC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}