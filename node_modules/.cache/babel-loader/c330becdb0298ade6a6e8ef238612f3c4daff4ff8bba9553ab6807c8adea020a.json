{"ast":null,"code":"import { createListMessagesFunction } from './createListMessagesFunction.mjs';\nimport { createOnMessageFunction } from './createOnMessageFunction.mjs';\nimport { createSendMessageFunction } from './createSendMessageFunction.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst convertItemToConversation = (client, modelIntrospection, conversationId, conversationRouteName, conversationMessageModel, getInternals) => {\n  if (!conversationId) {\n    throw new Error(`An error occurred converting a ${conversationRouteName} conversation: Missing ID`);\n  }\n  return {\n    id: conversationId,\n    onMessage: createOnMessageFunction(client, modelIntrospection, conversationId, conversationRouteName, getInternals),\n    sendMessage: createSendMessageFunction(client, modelIntrospection, conversationId, conversationRouteName, getInternals),\n    listMessages: createListMessagesFunction(client, modelIntrospection, conversationId, conversationMessageModel, getInternals)\n  };\n};\nexport { convertItemToConversation };","map":{"version":3,"names":["convertItemToConversation","client","modelIntrospection","conversationId","conversationRouteName","conversationMessageModel","getInternals","Error","id","onMessage","createOnMessageFunction","sendMessage","createSendMessageFunction","listMessages","createListMessagesFunction"],"sources":["../../../../../src/runtime/internals/ai/convertItemToConversation.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createListMessagesFunction } from './createListMessagesFunction';\nimport { createOnMessageFunction } from './createOnMessageFunction';\nimport { createSendMessageFunction } from './createSendMessageFunction';\nexport const convertItemToConversation = (client, modelIntrospection, conversationId, conversationRouteName, conversationMessageModel, getInternals) => {\n    if (!conversationId) {\n        throw new Error(`An error occurred converting a ${conversationRouteName} conversation: Missing ID`);\n    }\n    return {\n        id: conversationId,\n        onMessage: createOnMessageFunction(client, modelIntrospection, conversationId, conversationRouteName, getInternals),\n        sendMessage: createSendMessageFunction(client, modelIntrospection, conversationId, conversationRouteName, getInternals),\n        listMessages: createListMessagesFunction(client, modelIntrospection, conversationId, conversationMessageModel, getInternals),\n    };\n};\n"],"mappings":";;;;AAAA;AACA;AAIY,MAACA,yBAAyB,GAAGA,CAACC,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,wBAAwB,EAAEC,YAAY,KAAK;EACpJ,IAAI,CAACH,cAAc,EAAE;IACjB,MAAM,IAAII,KAAK,CAAC,kCAAkCH,qBAAqB,2BAA2B,CAAC;EAC3G;EACI,OAAO;IACHI,EAAE,EAAEL,cAAc;IAClBM,SAAS,EAAEC,uBAAuB,CAACT,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,qBAAqB,EAAEE,YAAY,CAAC;IACnHK,WAAW,EAAEC,yBAAyB,CAACX,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,qBAAqB,EAAEE,YAAY,CAAC;IACvHO,YAAY,EAAEC,0BAA0B,CAACb,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,EAAEE,wBAAwB,EAAEC,YAAY;EACnI,CAAK;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}